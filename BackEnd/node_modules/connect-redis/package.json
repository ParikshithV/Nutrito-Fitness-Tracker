{
  "_args": [
    [
      {
        "raw": "connect-redis@^4.0.3",
        "scope": null,
        "escapedName": "connect-redis",
        "name": "connect-redis",
        "rawSpec": "^4.0.3",
        "spec": ">=4.0.3 <5.0.0",
        "type": "range"
      },
      "N:\\Project_2\\BackEnd"
    ]
  ],
  "_from": "connect-redis@^4.0.3",
  "_hasShrinkwrap": false,
  "_id": "connect-redis@4.0.4",
  "_location": "/connect-redis",
  "_nodeVersion": "12.14.1",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/connect-redis_4.0.4_1580398720606_0.4312183225371562"
  },
  "_npmUser": {
    "name": "wavded",
    "email": "wavded@gmail.com"
  },
  "_npmVersion": "6.13.4",
  "_phantomChildren": {},
  "_requested": {
    "raw": "connect-redis@^4.0.3",
    "scope": null,
    "escapedName": "connect-redis",
    "name": "connect-redis",
    "rawSpec": "^4.0.3",
    "spec": ">=4.0.3 <5.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/connect-redis/-/connect-redis-4.0.4.tgz",
  "_shasum": "b194abe2f3754551f38086e1a28cb9e68d6c3b28",
  "_shrinkwrap": null,
  "_spec": "connect-redis@^4.0.3",
  "_where": "N:\\Project_2\\BackEnd",
  "author": {
    "name": "TJ Holowaychuk",
    "email": "tj@vision-media.ca"
  },
  "bugs": {
    "url": "https://github.com/visionmedia/connect-redis/issues"
  },
  "contributors": [
    {
      "name": "Marc Harter",
      "email": "wavded@gmail.com"
    }
  ],
  "dependencies": {},
  "description": "Redis session store for Connect",
  "devDependencies": {
    "blue-tape": "^1.0.0",
    "eslint": "^6.7.2",
    "eslint-config-prettier": "^6.1.0",
    "eslint-plugin-prettier": "^3.1.0",
    "express-session": "^1.17.0",
    "ioredis": "^4.14.1",
    "nyc": "^14.1.1",
    "prettier": "^1.19.1",
    "redis": "^2.8.0",
    "redis-mock": "^0.47.0"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-aXk7btMlG0J5LqtPNRpFKa5fglzlTzukYNx+Fq8cghbUIQHN/gyK9c3+b0XEROMwiSxMoZDADqjp9tdpUoZLAg==",
    "shasum": "b194abe2f3754551f38086e1a28cb9e68d6c3b28",
    "tarball": "https://registry.npmjs.org/connect-redis/-/connect-redis-4.0.4.tgz",
    "fileCount": 10,
    "unpackedSize": 16963,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeMviBCRA9TVsSAnZWagAAcjYP/jKi8Xm4fAqPGA3476od\nbcriiPSCw+Q+fiEAuBG8SV4nAjrbE5APFD087MmPKo7FcCO4MgOmzduHVKIs\nwVunam8r2IOKVERXWHkrfG4NLb/Tn3cM88UL6iqzI2EbDBIzZcRrv3eyQA53\nwxl95QO0gwBxfzur32CmZcE8ZgwZndNKBvnlJ7wtpMMGAwACTqK5v6aI/4+/\n2TVAw7eRcV24W+BQC2rlqIC0k2kApVVrexkfZySalZZilSy3AzsMFgaEvY4w\nNEwO1hxw8FUwbReyceQGszNLKUu+zFSqhn9FLnq4jGs7rXfs+7Kc7jT/y0Rp\nJFUEKq0NwxsF6tibwHx2R0DBODt420wT/WDbtnzFzoOYwuulxcCoPfUEL1Jz\nEEqgxldN0JRzk9T1wauIIDfr0clhEl0u9BO7u7oiTrZ9fT3x9bxRTBR6cAwe\nodTZw1Ec1XOqE1Ine98N2OsFlItBITolZ8g6mjR3E9+2q1176OgOU+65gJwh\nKDzJ5/h55APE2tDB20lNSZGvWn1hvtL5BqOoykroKFWQynp5yDeytbYd7mqJ\nRgvAMdi5m66WkZ/188vdflNHQb37CpdSAX1e9Y1JR3tg4u7guf6oyGp678Bx\n4UVFKbOJ/HWG+0sojgw+VuHLarDvjA4pcDt7NXsg/rUeWJzzcwlZFPP9N3Al\nrrAB\r\n=10Yi\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "engines": {
    "node": ">=8.0.0"
  },
  "gitHead": "8cc3e92f2a79d03f094a2b7f775085838c1f15ac",
  "homepage": "https://github.com/visionmedia/connect-redis#readme",
  "license": "MIT",
  "main": "./index.js",
  "maintainers": [
    {
      "name": "chirag04",
      "email": "jain_chirag04@yahoo.com"
    },
    {
      "name": "tjholowaychuk",
      "email": "tj@vision-media.ca"
    },
    {
      "name": "wavded",
      "email": "wavded@gmail.com"
    }
  ],
  "name": "connect-redis",
  "optionalDependencies": {},
  "readme": "[![npm](https://img.shields.io/npm/v/connect-redis.svg)](https://npmjs.com/package/connect-redis) [![travis](https://travis-ci.org/tj/connect-redis.svg?branch=master)](https://travis-ci.org/tj/connect-redis) [![code-style](https://img.shields.io/badge/code_style-prettier-ff69b4.svg)](https://gitter.im/jlongster/prettier) ![Downloads](https://img.shields.io/npm/dm/connect-redis.svg)\n\n**connect-redis** provides Redis session storage for Express. Requires Redis >= `2.0.0`.\n\n**Migrating to V4?** See [this guide](migration-to-v4.md) on what's changed.\n\n## Installation\n\nnpm:\n\n```sh\nnpm install redis connect-redis express-session\n```\n\nYarn:\n\n```sh\nyarn add redis connect-redis express-session\n```\n\n## API\n\n```js\nconst redis = require('redis')\nconst session = require('express-session')\n\nlet RedisStore = require('connect-redis')(session)\nlet redisClient = redis.createClient()\n\napp.use(\n  session({\n    store: new RedisStore({ client: redisClient }),\n    secret: 'keyboard cat',\n    resave: false,\n  })\n)\n```\n\n### RedisStore(options)\n\nThe `RedisStore` requires an existing Redis client. Any clients compatible with the [`redis`][1] API will work. See `client` option for more details.\n\n#### Options\n\n##### client\n\nAn instance of [`redis`][1] or a `redis` compatible client.\n\nKnown compatible and tested clients:\n\n- [redis][1]\n- [ioredis](https://github.com/luin/ioredis)\n- [redis-mock](https://github.com/yeahoffline/redis-mock) for testing.\n\n##### prefix\n\nKey prefix in Redis (default: `sess:`).\n\nThis prefix appends to whatever prefix you may have set on the `client` itself.\n\n**Note**: You may need unique prefixes for different applications sharing the same Redis instance. This limits bulk commands exposed in `express-session` (like `length`, `all`, `keys`, and `clear`) to a single application's data.\n\n##### ttl\n\nIf the session cookie has a `expires` date, `connect-redis` will use it as the TTL.\n\nOtherwise, it will expire the session using the `ttl` option (default: `86400` seconds or one day).\n\n**Note**: The TTL is reset every time a user interacts with the server. You can disable this behavior in _some_ instances by using `disableTouch`.\n\n**Note**: `express-session` does not update `expires` until the end of the request life cycle. Calling `session.save()` manually beforehand will have the previous value.\n\n##### disableTouch\n\nDisables re-saving and resetting the TTL when using `touch` (default: `false`)\n\nThe `express-session` package uses `touch` to signal to the store that the user has interacted with the session but hasn't changed anything in its data. Typically, this helps keep the users session alive if session changes are infrequent but you may want to disable it to cut down the extra calls or to prevent users from keeping sessions open too long. Also consider enabling if you store a lot of data on the session.\n\nRef: https://github.com/expressjs/session#storetouchsid-session-callback\n\n##### serializer\n\nThe encoder/decoder to use when storing and retrieving session data from Redis (default: `JSON`).\n\n```ts\ninterface Serializer {\n  parse(string): object\n  stringify(object): string\n}\n```\n\n##### scanCount\n\nValue used for _count_ parameter in [Redis `SCAN` command](https://redis.io/commands/scan#the-count-option). Used for `ids()` and `all()` methods (default: `100`).\n\n## FAQ\n\n#### How to log Redis errors?\n\n```js\nclient.on('error', console.error)\n```\n\n#### How do I handle lost connections to Redis?\n\nBy default, the [`redis`][1] client will [auto-reconnect](https://github.com/mranney/node_redis#overloading) on lost connections. But requests may come in during that time. In Express, one way you can handle this scenario is including a \"session check\":\n\n```js\napp.use(session(/* setup session here */))\napp.use(function(req, res, next) {\n  if (!req.session) {\n    return next(new Error('oh no')) // handle error\n  }\n  next() // otherwise continue\n})\n```\n\nIf you want to retry, here is [another option](https://github.com/expressjs/session/issues/99#issuecomment-63853989).\n\n# License\n\nMIT\n\n[1]: https://github.com/NodeRedis/node_redis\n",
  "readmeFilename": "readme.md",
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/visionmedia/connect-redis.git"
  },
  "scripts": {
    "fmt": "prettier --write \"**/*.{js,md,json,*rc}\"",
    "lint": "eslint index.js test lib",
    "test": "nyc tape \"test/*-test.js\""
  },
  "version": "4.0.4"
}
